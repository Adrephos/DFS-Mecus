# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import NameNode_pb2 as NameNode__pb2


class DBServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UploadDB = channel.unary_unary(
                '/NameNode.Service.DBService/UploadDB',
                request_serializer=NameNode__pb2.UploadDBRequest.SerializeToString,
                response_deserializer=NameNode__pb2.UploadDBResponse.FromString,
                )
        self.DownloadDB = channel.unary_unary(
                '/NameNode.Service.DBService/DownloadDB',
                request_serializer=NameNode__pb2.DownloadDBRequest.SerializeToString,
                response_deserializer=NameNode__pb2.DownloadDBResponse.FromString,
                )
        self.HeartBeat = channel.unary_unary(
                '/NameNode.Service.DBService/HeartBeat',
                request_serializer=NameNode__pb2.HeartBeatRequest.SerializeToString,
                response_deserializer=NameNode__pb2.HeartBeatResponse.FromString,
                )


class DBServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UploadDB(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadDB(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HeartBeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DBServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UploadDB': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadDB,
                    request_deserializer=NameNode__pb2.UploadDBRequest.FromString,
                    response_serializer=NameNode__pb2.UploadDBResponse.SerializeToString,
            ),
            'DownloadDB': grpc.unary_unary_rpc_method_handler(
                    servicer.DownloadDB,
                    request_deserializer=NameNode__pb2.DownloadDBRequest.FromString,
                    response_serializer=NameNode__pb2.DownloadDBResponse.SerializeToString,
            ),
            'HeartBeat': grpc.unary_unary_rpc_method_handler(
                    servicer.HeartBeat,
                    request_deserializer=NameNode__pb2.HeartBeatRequest.FromString,
                    response_serializer=NameNode__pb2.HeartBeatResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'NameNode.Service.DBService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DBService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UploadDB(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NameNode.Service.DBService/UploadDB',
            NameNode__pb2.UploadDBRequest.SerializeToString,
            NameNode__pb2.UploadDBResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadDB(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NameNode.Service.DBService/DownloadDB',
            NameNode__pb2.DownloadDBRequest.SerializeToString,
            NameNode__pb2.DownloadDBResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HeartBeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NameNode.Service.DBService/HeartBeat',
            NameNode__pb2.HeartBeatRequest.SerializeToString,
            NameNode__pb2.HeartBeatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
